// –ú–µ—Å—Ç–æ –¥–ª—è –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏
// function getTimeFromMinutes() {

// }

// 1) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –º–∏–Ω—É—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏. (–°–º–æ—Ç—Ä–∏ –ø—Ä–∏–º–µ—Ä). –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Å–ª–æ–≤–∞ "—á–∞—Å" - –æ–Ω–æ –º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ü–∏—Ñ—Ä—ã. –ï—Å–ª–∏ –≤–º–µ—Å—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ —á–∏—Å–ª–æ, –¥—Ä–æ–±–Ω–æ–µ –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ - —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ"

// –í–Ω–∏–º–∞–Ω–∏–µ! –î–∞–≤–∞–π—Ç–µ –ø–æ–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–∏–º—Å—è –º–∞–∫—Å–∏–º—É–º 600—é –º–∏–Ω—É—Ç–∞–º–∏ (10 —á–∞—Å–æ–≤). –¢–∞–∫ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞ –±—É–¥—É—Ç —Ä–∞–∑–¥—É–≤–∞—Ç—å –∫–æ–¥ (33 —á–∞—Å–∞, 31 —á–∞—Å, 11 —á–∞—Å–æ–≤ –∏ —Ç–¥). –≠—Ç–æ–≥–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏ –∫–æ–¥ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ (1 - 10 —á–∞—Å–æ–≤). –ù–æ –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏ –ø–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç, –æ–Ω —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Ç–µ—Å—Ç—ã.

// –ü—Ä–∏–º–µ—Ä:

// getTimeFromMinutes(150) => "–≠—Ç–æ 2 —á–∞—Å–∞ –∏ 30 –º–∏–Ω—É—Ç"

// getTimeFromMinutes(50) => "–≠—Ç–æ 0 —á–∞—Å–æ–≤ –∏ 50 –º–∏–Ω—É—Ç"

// getTimeFromMinutes(0) => "–≠—Ç–æ 0 —á–∞—Å–æ–≤ –∏ 0 –º–∏–Ω—É—Ç"

// getTimeFromMinutes(-150) => "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ"

// function multiply(a, b) {
// 	console.log(a, b)
// }

// multiply(1, 2); // 1 2
// multiply(1, 2, 3); // 1 2
// multiply(1, 2, 3, 4); // 1 2

// const books = [
//   {
//     title: "The Last Kingdom",
//     author: "Bernard Cornwell",
//     rating: 8.38,
//   },
//   {
//     title: "Beside Still Waters",
//     author: "Robert Sheckley",
//     rating: 8.51,
//   },
//   {
//     title: "The Dream of a Ridiculous Man",
//     author: "Fyodor Dostoevsky",
//     rating: 7.75,
//   },
//   {
//     title: "Redder Than Blood",
//     author: "Tanith Lee",
//     rating: 7.94,
//   },
//   {
//     title: "The Dreams in the Witch House",
//     author: "Howard Lovecraft",
//     rating: 8.67,
//   },
// ];

// const MIN_BOOK_RATING = 8;

// const names = books
//   .filter(book => book.rating > MIN_BOOK_RATING) // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∫–Ω–∏–≥–∏ –∑ —Ä–µ–π—Ç–∏–Ω–≥–æ–º –±—ñ–ª—å—à–µ MIN_BOOK_RATING
//   .map(book => book.author)                      // –û—Ç—Ä–∏–º—É—î–º–æ –º–∞—Å–∏–≤ –∞–≤—Ç–æ—Ä—ñ–≤ –∑ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –∫–Ω–∏–≥
//   .toSorted((a, b) => a.localeCompare(b));       // –°–æ—Ä—Ç—É—î–º–æ –∞–≤—Ç–æ—Ä—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É

// console.log(names); // ["Bernard Cornwell", "Howard Lovecraft", "Robert Sheckley"]

// function

// const usdCurr = 28;
// const eurCurr = 32;
// const discount = 0.9;

// function convert(amount, curr) {
//   return curr * amount;
// }

// function promotion(result) {
//   console.log(result * discount);
// }

// const res = convert(500, usdCurr);

// promotion(res);

// 2) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è 4 —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º–æ–µ –±–æ–ª—å—à–µ–µ –∏–∑ –Ω–∏—Ö. –ï—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º –∏–ª–∏ –∏—Ö –º–µ–Ω—å—à–µ 4 - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 0. –î—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã.

// –ü—Ä–∏–º–µ—Ä:

// findMaxNumber(1, 5, 6.6, 11); =>  11

// findMaxNumber(1, 5, '6', '10');  =>  0

// –£ —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –µ—Å—Ç—å –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –≤ JS. –ü–æ–¥—Ö–æ–¥–∏—Ç –ª—é–±–æ–µ :)

// –û—Ç–≤–µ—Ç —Å –∫–æ–¥–æ–º —ç—Ç–∏—Ö –∑–∞–¥–∞—á –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç—É—Ç: —Å—Å—ã–ª–∫–∞

// –ï—Å–ª–∏ —É –≤–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ –¥—Ä—É–≥–æ–º—É, –Ω–æ —Ä–µ—à–µ–Ω–∏–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è - —Ç–æ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è –≤—Å–µ–≥–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ.

// –ù–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Ä–µ—à–∏—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üôÇ

// function first() {
//   // Do something
//   setTimeout(function () {
//     console.log(1);
//   }, 500);
// }

// function learnJS(lang, callback) {
//   console.log(`–Ø —É—á—É: ${lang}`);
//   callback();
// }

// function done() {
//   console.log("–Ø –ø—Ä–æ—à–µ–ª —ç—Ç–æ—Ç —É—Ä–æ–∫!");
// }

// learnJS("JavaScript", done);

// OBJ

// const options = {
//   name: "test",
//   width: 1024,
//   height: 1024,
//   colors: {
//     border: "black",
//     bg: "red",
//   },
// };

// console.log(Object.keys(options).length);

// // console.log(options.name);

// // delete options.name;

// let counter = 0; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å—á–µ—Ç—á–∏–∫

// for (let key in options) {
//   if (typeof options[key] === "object") {
//     for (let i in options[key]) {
//       console.log(`–°–≤–æ–π—Å—Ç–≤–æ ${i} –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ ${options[key][i]} `);
//       counter++;
//     }
//   } else {
//     console.log(`–°–≤–æ–π—Å—Ç–≤–æ ${key} –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ ${options[key]} `);
//     counter++;
//   }
// }
// console.log(counter);

// // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—å–µ–∫—Ç–∞

// const { border, bg } = options.colors;

//  arr

// const arr = [2, 3, 6, 8, 10];

// for (let i = 0; i < arr.length; i++) {
//   console.log(arr[i]);
// }

// for (let value of arr) {
//   console.log(value);
// }

// arr.forEach(function (item, i, arr) {
//   console.log(`${i}: ${item} –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞ ${arr}`);
// });

// const str = prompt("", "");

// const products = str.split(",");
// products.sort();
// console.log(products.join(";"));

// const q = {
//   one: 1,
//   two: 2,
//   three: 3,
//   fourth: {
//     1: "2",
//     2: "4",
//   },
//   five: ["sobaka", "lox", "loxa"],
//   six: ["2", "5", "8", "10"],
// };

// const newQ = { ...q };

// console.log(newQ);

// OOP

// const soldier = {
//   health: 400,
//   armor: 100,
//   sayHello: function () {
//     console.log("Hello");
//   },
// };

// const john = {
//   health: 100,
// };

// object.setPrototypeOf(jonh, soldier);

// —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ __proto__

// const john = Object.create(soldier);

// john.sayHello();

// const fontSize = 26 + "px";

//  –ï—Å–ª–∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å + (–£–Ω–∞—Ä–Ω—ã–π +) –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π –ø–æ–ª—É—á–∏—Ç—å—Å—è —á–∏—Å–ª–æ

//

// let number = 5;
// debugger;

// function logNumber() {
//   let number = 4;
//   console.log(number);
// }

// number = 6;

// logNumber();
// debugger;

function createCounter() {
  let counter = 0;

  const myFunction = function () {
    counter = counter + 1;
    return counter;
  };

  return myFunction;
}

const increment = createCounter();
const c1 = increment();
const c2 = increment();
const c3 = increment();

console.log(c1, c2, c3);

/*

function createCounter() {
    let counter = 0;  // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é counter –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ–º 0

    const myFunction = function () {
        counter = counter + 1;  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ counter –Ω–∞ 1 –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è myFunction
        return counter;  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ counter
    };

    return myFunction;  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é myFunction –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è createCounter
}

–ü–æ—è—Å–Ω–µ–Ω–∏–µ:
–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è counter:

–û–±—ä—è–≤–ª–µ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ createCounter. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –µ—ë –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
–ó–Ω–∞—á–µ–Ω–∏–µ counter –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ 0.
–§—É–Ω–∫—Ü–∏—è myFunction:

–≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –æ–±—ä—è–≤–ª–µ–Ω–Ω–∞—è –≤–Ω—É—Ç—Ä–∏ createCounter. –û–Ω–∞ –∑–∞–º—ã–∫–∞–µ—Ç –≤ —Å–µ–±–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é counter.
–ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ myFunction –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –æ–Ω–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ counter –Ω–∞ 1 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ.
–í–æ–∑–≤—Ä–∞—Ç myFunction:

–ü–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è myFunction, —Ñ—É–Ω–∫—Ü–∏—è createCounter –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—ë –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –≤—ã–∑—ã–≤–∞—é—â–∏–π –∫–æ–¥ –ø–æ–ª—É—á–∏—Ç –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Å–º–æ–∂–µ—Ç –µ—ë –≤—ã–∑—ã–≤–∞—Ç—å.
2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ createCounter
javascript
Copy code
const increment = createCounter();  // –í—ã–∑—ã–≤–∞–µ–º createCounter –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é increment
–ü–æ—è—Å–Ω–µ–Ω–∏–µ:
–í—ã–∑–æ–≤ createCounter:

–ö–æ–≥–¥–∞ –º—ã –≤—ã–∑—ã–≤–∞–µ–º createCounter(), –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â–µ–µ:
–°–æ–∑–¥–∞–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è counter —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 0.
–°–æ–∑–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è myFunction, –∫–æ—Ç–æ—Ä–∞—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç counter.
createCounter –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é myFunction, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π increment.
–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è increment:

–¢–µ–ø–µ—Ä—å increment —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ counter.
3. –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ increment
javascript
Copy code
const c1 = increment();  // –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤ increment
const c2 = increment();  // –í—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤ increment
const c3 = increment();  // –¢—Ä–µ—Ç–∏–π –≤—ã–∑–æ–≤ increment
–ü–æ—è—Å–Ω–µ–Ω–∏–µ:
–ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤ increment():

–ö–æ–≥–¥–∞ –º—ã –≤—ã–∑—ã–≤–∞–µ–º increment(), –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –≤–Ω—É—Ç—Ä–∏ myFunction.
–ó–Ω–∞—á–µ–Ω–∏–µ counter —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å 0 –¥–æ 1.
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 1, –∏ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π c1.
–í—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤ increment():

counter —Ç–µ–ø–µ—Ä—å —Ä–∞–≤–Ω–æ 1.
–í—ã–∑—ã–≤–∞–µ–º increment() —Å–Ω–æ–≤–∞, –∏ counter —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å 1 –¥–æ 2.
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 2, –∏ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π c2.
–¢—Ä–µ—Ç–∏–π –≤—ã–∑–æ–≤ increment():

counter —Ç–µ–ø–µ—Ä—å —Ä–∞–≤–Ω–æ 2.
–í—ã–∑—ã–≤–∞–µ–º increment() —Å–Ω–æ–≤–∞, –∏ counter —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å 2 –¥–æ 3.
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 3, –∏ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π c3.
4. –í—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π
javascript
Copy code
console.log(c1, c2, c3);  // –í—ã–≤–æ–¥–∏—Ç: 1 2 3
–ü–æ—è—Å–Ω–µ–Ω–∏–µ:
–ö–æ–≥–¥–∞ –º—ã –≤—ã–≤–æ–¥–∏–º c1, c2, –∏ c3, –Ω–∞ —ç–∫—Ä–∞–Ω –≤—ã–≤–æ–¥—è—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è 1, 2, –∏ 3 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
–≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –∫–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ increment() —É–≤–µ–ª–∏—á–∏–≤–∞–ª –∑–Ω–∞—á–µ–Ω–∏–µ counter –∏ —Å–æ—Ö—Ä–∞–Ω—è–ª –µ–≥–æ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è –∑–∞–º—ã–∫–∞–Ω–∏—é.
–ò—Ç–æ–≥–æ–≤–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ
–ó–∞–º—ã–∫–∞–Ω–∏–µ: –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ü–µ–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, ‚Äî —ç—Ç–æ –∑–∞–º—ã–∫–∞–Ω–∏–µ. –ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è myFunction –±—ã–ª–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –∏–∑ createCounter, –æ–Ω–∞ "–∑–∞–∫—Ä—ã–ª–∞" –≤ —Å–µ–±–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞, –≤–∫–ª—é—á–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é counter.
–ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ increment() –∏–º–µ–ª –¥–æ—Å—Ç—É–ø –∫ —Ç–æ–º—É –∂–µ —Å–∞–º–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é counter, —á—Ç–æ –ø–æ–∑–≤–æ–ª–∏–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏.
–¢–∞–∫, –∫–∞–∂–¥–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è c1, c2, –∏ c3 —Å–æ–¥–µ—Ä–∂–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è 1, 2, –∏ 3, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ counter –æ–±–Ω–æ–≤–ª—è–ª–æ—Å—å —Å –∫–∞–∂–¥—ã–º –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ increment().

*/

{
  let msg = "Hello";
}

console.log(msg); // —ç—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–∞—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Å–∫–æ–±–æ–∫

for (let i = 0; i < 9; i++) {
  for (let j = 0; j < 9; j++) {
    let num = 3;
  }

  console.log(num);
}

/* 

‚Ä¢	–ö–∞–∫–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ: let x = 5; alert( x++ ); ? // 5 (–µ—Å–ª–∏ ++5 –±—É–¥–µ—Ç => 6 , –µ—Å–ª–∏ 5++ –±—É–¥–µ—Ç => 5 –Ω–æ –ø—Ä–∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–º –≤—ã–∑–æ–≤–µ –±—É–¥–µ—Ç 6  ) 

‚Ä¢	–ß–µ–º—É —Ä–∞–≤–Ω–æ —Ç–∞–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: [ ] + false - null + true ? //  –ö–æ–≥–¥–∞ –ø—É—Å—Ç–æ–π [] , –æ–Ω –±—É–¥–µ—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω –∫ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É —Ç–∏–ø—É –¥–∞–Ω–Ω—ã—Ö , —Ç–æ –µ—Å—Ç—å [] == '' ; –ü–æ—Ç–æ–º –∫–æ–≥–¥–∞ –º—ã –¥–æ–±–∞–≤–ª—è–µ–º —á—Ç–æ-—Ç–æ –∫ —Å—Ç—Ä–æ–∫–µ –ø–æ–ª—É—á–∞–µ—Ç—å—Å—è —Å—Ç—Ä–æ–∫–∞ ; =>  'false' –¥–∞–ª—å—à–µ  'false' - null = NaN . –í –∏—Ç–æ–≥–µ –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç –±—É–¥–µ—Ç NaN;

‚Ä¢	–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥: let y = 1; let x = y = 2; alert(x); ? // 2

‚Ä¢	–ß–µ–º—É —Ä–∞–≤–Ω–∞ —Å—É–º–º–∞ [ ] + 1 + 2? //  12 

‚Ä¢	–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥: alert( "1"[0] )? // 1 

‚Ä¢	–ß–µ–º—É —Ä–∞–≤–Ω–æ 2 && 1 && null && 0 && undefined ? // null  // –æ–ø–µ—Ä–∞—Ç–æ—Ä && –∏ –≤—Å–µ–≥–¥–∞ –∑–∞–ø–∏–Ω–∞–µ—Ç—å—Å—è –Ω–∞ –¥–∂–∏

‚Ä¢	–ï—Å—Ç—å –ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏? !!( a && b ) –∏ (a && b) ? //  !! => –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –±—É–ª–∏–Ω–æ–≤–æ–µ 

‚Ä¢	–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥: alert( null || 2 && 3 || 4 ); ? //  || –∏–ª–∏ –∑–∞–ø–∏–Ω–∞–µ—Ç—å—Å—è –Ω–∞ –ø—Ä–∞–≤–¥–µ  2 && 3 => 3 –ø–æ—Ç–æ–º  null || 2 && 3 => 3 –æ—Ç–≤–µ—Ç => 3

‚Ä¢	a = [1, 2, 3]; b = [1, 2, 3]; –ü—Ä–∞–≤–¥–∞ –ª–∏ —á—Ç–æ a == b ? false

‚Ä¢	–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥: alert( +"Infinity" ); ? number 

‚Ä¢	–í–µ—Ä–Ω–æ –ª–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ: "–Å–∂–∏–∫" > "—è–±–ª–æ–∫–æ"? //   false // unicode 

‚Ä¢	–ß–µ–º—É —Ä–∞–≤–Ω–æ 0 || "" || 2 || undefined || true || fals–µ ? // 2








*/
